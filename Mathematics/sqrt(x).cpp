/*******************************************************************************************************************************************************************

******************************************************************************************************************************************************************/
 class Solution {
public:
    int mySqrt(int x) {
         long r = x;
    while (r*r > x)
        r = (r + x/r) / 2;
    return r;
        
    }
};

/******************************************************************************************************************************************************************/
class Solution {
public:
    int mySqrt(int x) {
        
        long long int floorRoot, left=1, right=x;

        while (left <= right) {

            long long int mid = left + ((right-left)/2);

            if (mid * mid == x) {
                return mid;
            } else if (mid * mid < x) {
                floorRoot = mid;
                left = mid + 1;
            } else {
                right = mid-1;
            }

        }

        return floorRoot;

    }
};

/*************************************************************************************************************************************************************/
class Solution {
public:
    int mySqrt(int x) {
        if(x==0)
            return 0;
        
        long long i;
        
        for(i=1;i*i<=x;i++)
        {}
        i--;
        return i;
    }
        
    
};
